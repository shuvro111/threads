// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String      @id
  avatar    String?
  name      String
  username  String   @unique
  threads     Thread[]
  likedThreads Thread[] @relation("ThreadLikes")
  bio   String?
  communities Community[]
  onboardingStatus Boolean @default(false)
  createdCommunities Community[] @relation("CommunityCreator")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Community {
  id        Int      @id @default(autoincrement())
  name      String
  slug      String   @unique
  description   String?
  avatar    String?
  members   User[]
  creator   User     @relation("CommunityCreator", fields: [creatorId], references: [id])
  creatorId String
  threads   Thread[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Thread {
  id        Int      @id @default(autoincrement())
  content   String?
  media     String?
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  community Community? @relation(fields: [communityId], references: [id])
  communityId Int?
  likedBy    User[]   @relation("ThreadLikes")
  parent    Thread?  @relation("ThreadChildren", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentId  Int?
  children  Thread[] @relation("ThreadChildren")
  isRepost  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
